{"version":3,"sources":["webpack:///./src/images/index/left_img.png","webpack:///src/views/Special/special.vue","webpack:///./src/views/Special/special.vue?8b00","webpack:///./src/views/Special/special.vue","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js","webpack:///./src/images/index/computer.png"],"names":["module","exports","__webpack_require__","p","special","val","getTime","a","getFullYear","m","getDate","d","getHours","h","getMinutes","getSeconds","minute","second","data","info","callback","res","failData","getmesage","locale","this","Special_special","render","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","width","background","margin-bottom","_v","margin","attrs","id","href","on","click","first","third","fourth","url_first","target","url_Second","_m","border-top","margin-top","text-align","_s","$t","_l","item","font-family","dateTime","timestamp","slice","Number","btcvalue","toFixed","Math","floor","mining_count","Divide","staticRenderFns","height","src","alt","float","margin-left","Component","normalizeComponent","ssrContext","__webpack_exports__","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","key","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","Object","keys","forEach","methodName","Utils","obj","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","paramsPart","decodeURIComponent","isObject","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","eventHandler","index$$1","data$$1","Array","isArray","instanceParams","instance","modules","moduleName","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","installModule","update","updateSize","swiper","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","snapIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","transition$1","transitionStart","runCallbacks","direction","autoHeight","dir","animating","swiper_esm_bundle_slide","slideTo","internal","slideIndex","preventIntercationOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","swiper_esm_bundle_events","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","allowTouchMove","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_breakpoints","breakpoint","getBreakpoint","currentBreakpoint","breakPointsParams","originalParams","needsReLoop","points","point","sort","b","innerWidth","swiper_esm_bundle_Browser","isIE","isSafari","isUiWebView","test","defaults","init","uniqueNavElements","preloadImages","updateOnImagesReady","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","mutation","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","disconnect","Observer$1","destroy","Virtual","force","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","offset$$1","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","currentOpacity","currentScale","parallax","setTransform","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","sqrt","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","text$$1","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","transform$$1","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","hideOnClick","number","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause"],"mappings":"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","file":"static/js/0.487a8db188f84f97d67b.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/img/left_img.df66933.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/index/left_img.png\n// module id = AaaX\n// module chunks = 0 8","<template>\r\n  <div class=\"box\" style=\"width:100%;background:#111545;margin-bottom: -35px;\">\r\n    <div class=\"focusImages\"></div>\r\n      \r\n      <div class=\"swiper-container\" id=\"swiper-container1\" style=\"width: 1200px;margin:0 auto\">\r\n          <div class=\"swiper-wrapper\">\r\n              <div  class=\"swiper-slide blue-slide\"  id=\"first\">\r\n                  <ul class=\"ul_s\">\r\n                     <li class=\"bgcolor\"><a href=\"javascript:;\" @click='first' >什么是TEX?</a></li>\r\n                    <li><a href=\"javascript:;\" @click=\"second\">持有者权利</a></li>\r\n                    <li ><a href=\"javascript:;\" @click=\"third\">获取TEX方法</a></li>\r\n                    <li><a href=\"javascript:;\" @click=\"fourth\">分红收益</a></li>\r\n                  </ul>\r\n                  <div>\r\n                    <h3 class=\"title\">什么是TEX?</h3>\r\n                    <p class=\"article\">TEX（3EX Token）是3EX交易平台发行的通证，\r\n                      是交易平台自身所有权益的代表。TEX的发行是依据“交易即挖矿”的原则逐步释放\r\n                      <a class=\"link\"  :href=\"url_first\" target=\"_Blank\">（查看关于流通量的说明）</a>，\r\n                      上限恒定为50亿个，永不增发，不预留，不私募。作为平台权益的代表，\r\n                      平台会将每日收入100%的分配给TEX的持有者\r\n                      <a class=\"link\"  :href=\"url_Second\" target=\"_Blank\">（查看收入分配详情）</a>，\r\n                      同时，TEX承诺做到绝对的资产透明化，所有的币币交易记录均可查询。</p>\r\n                     <!-- <img src=\"../../images/index/2.png\" alt=\"\" width=\"1200px\">  -->\r\n                     <ul style=\"width:982px;margin:0 auto;height:251px;margin-top: 150px;\">\r\n                       <li class=\"imgs\"><img src=\"../../images/index/computer.png\" width=\"318px\" alt=\"\"></li>\r\n                       <li class=\"imgs line\" >获得TEX</li>\r\n                       <li class=\"imgs\"><img src=\"../../images/index/left_img.png\" width=\"300px\" alt=\"\"></li>\r\n                     </ul>\r\n                     <ul class=\"main_footer\">\r\n                       <li style=\"float: left;\">交易即挖矿</li>\r\n                       <li  style=\"text-align:right\">限恒定为 5,000,000,000 TEX</li>\r\n                     </ul>\r\n                  </div>\r\n                 \r\n              </div>\r\n              <div  class=\"swiper-slide red-slide\"  id=\"second\" >\r\n                   <ul class=\"ul_s\">\r\n                       <li><a href=\"javascript:;\" @click='first' >什么是TEX?</a></li>\r\n                        <li class=\"bgcolor\"><a href=\"javascript:;\" @click=\"second\">持有者权利</a></li>\r\n                        <li ><a href=\"javascript:;\" @click=\"third\">获取TEX方法</a></li>\r\n                        <li><a href=\"javascript:;\" @click=\"fourth\">分红收益</a></li>\r\n                    </ul>\r\n                    <div>\r\n                       <h3 class=\"title\">持有者权利</h3>\r\n                      <p class=\"article\" style=\"text-align:center\">TEX是可流通的加密数字权益证明，作为3EX社区权益的代表，是3EX社区治理的基石。</p>\r\n                       <ul>\r\n                         <li class=\"yuan\" style=\"margin-left: 162px;\">平台收入分红</li>\r\n                         <li  class=\"yuan\">参与决策</li>\r\n                         <li  class=\"yuan\">选举和监督</li>\r\n                       </ul>\r\n                        <ul style=\"width:926px;margin:0 auto\">\r\n                         <li class=\"main\">3EX交易平台每日的收入，会100%平均分配给每个锁仓24小时的TEX。\r\n                           拥有的TEX越多，分红就越多。</li>\r\n                         <li  class=\"main\" style=\"margin-left: 103px;\">3EX社区通过发起智能合约投票，\r\n                           让TEX持有者参与业务决策。业务决策范围包括手续费、交易品类等。</li>\r\n                         <li  class=\"main\" style=\"margin-left: 103px;\">持有TEX的用户未来可以参与3EX社区的自治委员会的选举，\r\n                           并且可以监督项目方的各种违规行为，用TEX投票把违规项目方下线。</li>\r\n                       </ul>\r\n                       \r\n                    </div>\r\n                   \r\n              </div>\r\n              <div  class=\"swiper-slide orange-slide\" id=\"third\">\r\n                    <ul class=\"ul_s\">\r\n                       <li><a href=\"javascript:;\" @click='first' >什么是TEX?</a></li>\r\n                        <li><a href=\"javascript:;\" @click=\"second\">持有者权利</a></li>\r\n                        <li  class=\"bgcolor\"><a href=\"javascript:;\" @click=\"third\">获取TEX方法</a></li>\r\n                        <li><a href=\"javascript:;\" @click=\"fourth\">分红收益</a></li>\r\n                    </ul>\r\n                    <div>\r\n                       <h3 class=\"title\">获取TEX方法是什么？</h3>\r\n                       <ul style=\"width:1200px;margin-top: 77px;\">\r\n                         <li class=\"bg_img\">\r\n                            <h2 class=\"main_title\">挖矿获得</h2>\r\n                            <p class=\"p_1\">通过“交易即挖矿”的方式获取，\r\n                              每日平台根据当日TEX的价格和平台交易手续费来计算出当日释放的TEX数量\r\n                              ，再按照交易费贡献额等比例发放到您的资产账户中。\r\n                              </p>\r\n                         </li>\r\n                         <li class=\"bg_img\" style=\"float:right\">\r\n                           <h2 class=\"main_title\">交易获得</h2>\r\n                           <p class=\"p_2\">用户可以通过币币交易的形式直接购买TEX。</p>\r\n                         </li>\r\n                       </ul>\r\n                       \r\n                    </div>\r\n                   \r\n              </div> \r\n              \r\n              <div class=\"swiper-slide orange-slide\"  id=\"fourth\">\r\n                <ul class=\"ul_s\">\r\n                   <li><a href=\"javascript:;\" @click='first' >什么是TEX?</a></li>\r\n                    <li><a href=\"javascript:;\" @click=\"second\">持有者权利</a></li>\r\n                    <li ><a href=\"javascript:;\" @click=\"third\">获取TEX方法</a></li>\r\n                    <li class=\"bgcolor\"><a href=\"javascript:;\" @click=\"fourth\">分红收益</a></li>\r\n                </ul>\r\n                <div>\r\n                    <h3 class=\"title\">TEX分红收益</h3>\r\n                    <p class=\"article\">TEX每日的分红收益是根据用户持有的锁仓24小时的TEX数量分配的。\r\n                      每天的平台总收入会平均分配到每一个锁仓24小时TEX上，\r\n                       并且以各种币的形式分红到您的账户里，锁仓24小时的TEX越多，分红越多。</p>\r\n                      <table class=\"table tc\" style=\"border-top:none;margin-top: 60px;\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th class=\"ths\" style=\"text-align:center;width:200px\">{{ $t(\"time\") }}</th>\r\n                            <th class=\"ths\">平台交易收入估值(BTC)</th>\r\n                            <th class=\"ths\">参与分红TEX总量</th>\r\n                            <th class=\"ths\">每百万TEX分红估值(BTC)</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr v-for=\"item in form\">\r\n                            <td class=\"tds\" style=\"font-family: Helvetica;text-align:center\">{{dateTime(item.timestamp+'').slice(0,10)}}</td>\r\n                            <td class=\"tds\">{{Number(item.btcvalue).toFixed(8)}}</td>\r\n                            <td class=\"tds\" style=\"font-family: Helvetica;\">{{Math.floor(item.mining_count)}}</td>\r\n                            <td class=\"tds\" style=\"font-family: Helvetica;\">{{(Divide((Number(item.btcvalue).toFixed(8)),Math.floor(item.mining_count))*1000000).toFixed(8)}}</td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <!-- <img src=\"../../images/index/5.png\" alt=\"\" width=\"1200px\"> -->\r\n              </div> \r\n\r\n          </div>\r\n      </div> \r\n   </div>\r\n</template>\r\n<script>\r\nimport {userCenterInfo,responseResult,commRequest,getcoininfo,getPlatBonusMiningData} from \"lib/Service\";\r\nimport {USER_CENTER_INFO,USER_CENTER_SELECTED,USER_PHONE} from \"store/types\";\r\nimport Swiper from 'swiper'\r\nimport 'swiper/dist/css/swiper.min.css'\r\nimport { setUserCenterGoogleSet } from \"lib/SessionUtil\";\r\nexport default {\r\n  name: \"userCenter\",\r\n  data() {\r\n    return {\r\n        lang:'',\r\n        url_first:\"\",\r\n        url_Second:'',\r\n        form:[]\r\n    };\r\n  },\r\n  watch: {\r\n    'lang':function (val) {\r\n            \r\n            if(val=='zh'){\r\n           \r\n                this.url_first='https://support.3ex.com/hc/zh-cn/articles/360007435191'\r\n                this.url_Second='https://support.3ex.com/hc/zh-cn/articles/360007182752'\r\n            }else{\r\n                this.$router.push({path: '/Special2/special_us'});\r\n            }\r\n        }\r\n  },\r\n  methods:{\r\n    Divide:function(val1,val2){\r\n      let val=val2*1\r\n      if(val==0){\r\n        val=1\r\n      }\r\n      return val1/val\r\n    },\r\n      first:function(){\r\n            document.querySelector(\"#first\").scrollIntoView(true);\r\n        },  \r\n        second:function(){\r\n            document.querySelector(\"#second\").scrollIntoView(true);\r\n        },\r\n          third:function(){\r\n            document.querySelector(\"#third\").scrollIntoView(true);\r\n        },\r\n          fourth:function(){\r\n            document.querySelector(\"#fourth\").scrollIntoView(true);\r\n        },\r\n      dateTime: function (times) {\r\n                let a = new Date(times*1000).getTime()\r\n                let b = a \r\n                var date = new Date(b);\r\n                var y = date.getFullYear();\r\n                var m = date.getMonth() + 1;\r\n                m = m < 10 ? ('0' + m) : m;\r\n                var d = date.getDate();\r\n                d = d < 10 ? ('0' + d) : d;\r\n                var h = date.getHours();\r\n                h = h < 10 ? ('0' + h) : h;\r\n                var minute = date.getMinutes();\r\n                var second = date.getSeconds();\r\n                minute = minute < 10 ? ('0' + minute) : minute;\r\n                second = second < 10 ? ('0' + second) : second;\r\n                return y + '-' + m + '-' + d+' '+h+':'+minute+':'+second;\r\n            },\r\n     getmesage: function(val,callback) { //用户\r\n        let that = this;\r\n        getPlatBonusMiningData({}).then(data => {\r\n            responseResult(data,successData => {\r\n                    try {\r\n                        let info = successData.data;\r\n                        console.log(info)\r\n                          this.form=info\r\n                        if(callback){\r\n                            callback()\r\n                        }\r\n                    } catch (res) {\r\n                        console.log(res);\r\n                    }\r\n                },\r\n                failData => {\r\n                    // console.log(failData);\r\n                }\r\n            );\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getmesage()\r\n    // new Swiper(\".swiper-container\", {\r\n    //   loop: true,\r\n    //   // // 如果需要分页器\r\n    //   // pagination: \".swiper-pagination\",\r\n    //   // // 如果需要滚动条\r\n    //   // scrollbar: \".swiper-scrollbar\"\r\n    //      observer:true, //修改swiper自己或子元素时，自动初始化swiper\r\n    //       observeParents:true,//修改swiper的父元素时，自动初始化swiper\r\n    //        direction : 'vertical',\r\n       \r\n    // });\r\n     this.lang=this.$i18n.locale;\r\n      let that = this;\r\n      this.times = setInterval(function () {\r\n            that.lang=that.$i18n.locale;\r\n      },200)\r\n  },\r\n   beforeDestroy(){\r\n        if(this.times) { //如果定时器还在运行 或者直接关闭，不用判断\r\n            clearInterval(this.times); //关闭\r\n        }\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.ths{\r\n  font-family: PingFangSC-Medium;\r\nfont-size: 24px;\r\ncolor: #FFFFFF;\r\ntext-align: right\r\n}\r\n.tds{\r\n  font-family: DINAlternate-Bold;\r\nfont-size: 24px;\r\ncolor: #FFFFFF;\r\ntext-align: right\r\n}\r\n.table.zebra tbody tr:hover, .table tbody tr:hover {\r\n    background: none;\r\n}\r\n.table td {\r\n    word-wrap: break-word;\r\n    border-top: none !important;\r\n}\r\n.p_1{\r\n      width: 390px;\r\n    margin: 0 auto;\r\n      font-family: PingFangSC-Regular;\r\n    font-size: 18px;\r\n    color: rgb(255, 255, 255);\r\n    line-height: 30px;\r\n    width: 390px;\r\n    margin: 0px auto;\r\n    padding-left: 10px;\r\n}\r\n.p_2{\r\n      text-align: center;\r\n    margin-top: 42px;\r\n    font-family: PingFangSC-Semibold;\r\n    font-size: 18px;\r\n    color: #FFFFFF;\r\n}\r\n.main_title{\r\n      text-align: center;\r\n    padding-top: 39px;\r\n    color: #00D9FF;\r\n    font-size: 24px;\r\n}\r\n.bg_img{\r\n  width: 516px;\r\n  height: 222px;\r\n  float: left;\r\n  background: url(\"../../images/index/bg_img.png\") no-repeat 30px;\r\n  background-size: 480px;\r\n}\r\n.imgs{\r\n  float: left;\r\n}\r\n.main_footer{\r\n      width: 926px;\r\n    margin: 50px auto;\r\n    font-family: PingFangSC-Medium;\r\nfont-size: 24px;\r\ncolor: #FFFFFF;\r\n}\r\n.article{\r\n      font-size: 18px;\r\n    color: #ffffff;\r\n    line-height: 30px;\r\n    margin-top: 30px;\r\n}\r\n.title{\r\n  text-align: center;\r\n  font-size: 30px;\r\n  color: #ffffff;\r\n  margin-top: 61px;\r\n  \r\n}\r\n.line{\r\n  width: 226px;\r\n  height: 200px;\r\n  background: url(\"../../images/index/Line.png\") no-repeat 30px;\r\n      background-size: 200px;\r\n      margin-left: 65px;\r\n    margin-right: 73px;\r\n    text-align: center;\r\n    color: #ffffff;\r\n    padding-top: 67px;\r\n    font-size: 18px;\r\n}\r\n.link{\r\n  color: #4168f3\r\n}\r\n.lis{\r\n  background-image: linear-gradient(-130deg, #6D2FDF 0%, #4168F3 48%, #03CCFE 100%);\r\nborder-radius: 100px 100px 100px 0 2px 0 100px;\r\n}\r\na {\r\n  color: #ffffff;\r\n}\r\n.focusImages {\r\n  width: 100%;\r\n  height: 434px;\r\n  overflow: hidden;\r\n  background: url(\"../../images/index/1.png\") center;\r\n}\r\n.ul_s {\r\n  width: 1200px;\r\n  height: 100px;\r\n  margin: 0 auto;\r\n \r\n}\r\n.yuan{\r\n  width: 180px;\r\n  height: 180px;\r\n  float: left;\r\n      border-radius: 90px;\r\n      margin-top: 90px;\r\n    margin-left: 172px;\r\n        text-align: center;\r\n    line-height: 180px;\r\n    font-family: PingFangSC-Medium;\r\nfont-size: 24px;\r\ncolor: #FFFFFF;\r\n    background-image: linear-gradient(-154deg, #6A32E0 16%, #387BEF 52%, #3182EC 99%);\r\n}\r\n.main{\r\n  width: 240px;\r\n  height: 128px;\r\n      float: left;\r\n font-family: PingFangSC-Regular;\r\nfont-size: 18px;\r\ncolor: #FFFFFF;\r\nline-height: 32px;\r\n    margin-top: 30px;\r\n}\r\n.ul_s li {\r\n  float: left;\r\n  width: 300px;\r\n  height: 100px;\r\n  line-height: 100px;\r\n  text-align: center;\r\n  font-family: PingFangSC-Medium;\r\n  font-size: 24px;\r\n  color: #ffffff;\r\n  cursor: pointer;\r\n}\r\n.ul_s li a{\r\n    display: block;\r\n}\r\n.bgcolor {\r\n  /* background-image: linear-gradient(-130deg, #6D2FDF 0%, #4168F3 48%, #03CCFE 100%); */\r\n  background: url(\"../../images/index/previous.png\") no-repeat 250px,\r\n    linear-gradient(-130deg, #6d2fdf 0%, #4168f3 48%, #03ccfe 100%);\r\n}\r\n.mainimg {\r\n  width: 1200px;\r\n  margin: 0 auto;\r\n  height: 600px;\r\n  margin-bottom: -30px;\r\n  margin-top: 40px;\r\n}\r\n    .footer{\r\n        margin-top: 0 !important;\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/Special/special.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"box\",staticStyle:{\"width\":\"100%\",\"background\":\"#111545\",\"margin-bottom\":\"-35px\"}},[_c('div',{staticClass:\"focusImages\"}),_vm._v(\" \"),_c('div',{staticClass:\"swiper-container\",staticStyle:{\"width\":\"1200px\",\"margin\":\"0 auto\"},attrs:{\"id\":\"swiper-container1\"}},[_c('div',{staticClass:\"swiper-wrapper\"},[_c('div',{staticClass:\"swiper-slide blue-slide\",attrs:{\"id\":\"first\"}},[_c('ul',{staticClass:\"ul_s\"},[_c('li',{staticClass:\"bgcolor\"},[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.first}},[_vm._v(\"什么是TEX?\")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.second}},[_vm._v(\"持有者权利\")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.third}},[_vm._v(\"获取TEX方法\")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.fourth}},[_vm._v(\"分红收益\")])])]),_vm._v(\" \"),_c('div',[_c('h3',{staticClass:\"title\"},[_vm._v(\"什么是TEX?\")]),_vm._v(\" \"),_c('p',{staticClass:\"article\"},[_vm._v(\"TEX（3EX Token）是3EX交易平台发行的通证，\\n                    是交易平台自身所有权益的代表。TEX的发行是依据“交易即挖矿”的原则逐步释放\\n                    \"),_c('a',{staticClass:\"link\",attrs:{\"href\":_vm.url_first,\"target\":\"_Blank\"}},[_vm._v(\"（查看关于流通量的说明）\")]),_vm._v(\"，\\n                    上限恒定为50亿个，永不增发，不预留，不私募。作为平台权益的代表，\\n                    平台会将每日收入100%的分配给TEX的持有者\\n                    \"),_c('a',{staticClass:\"link\",attrs:{\"href\":_vm.url_Second,\"target\":\"_Blank\"}},[_vm._v(\"（查看收入分配详情）\")]),_vm._v(\"，\\n                    同时，TEX承诺做到绝对的资产透明化，所有的币币交易记录均可查询。\")]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_vm._m(1)])]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-slide red-slide\",attrs:{\"id\":\"second\"}},[_c('ul',{staticClass:\"ul_s\"},[_c('li',[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.first}},[_vm._v(\"什么是TEX?\")])]),_vm._v(\" \"),_c('li',{staticClass:\"bgcolor\"},[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.second}},[_vm._v(\"持有者权利\")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.third}},[_vm._v(\"获取TEX方法\")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.fourth}},[_vm._v(\"分红收益\")])])]),_vm._v(\" \"),_vm._m(2)]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-slide orange-slide\",attrs:{\"id\":\"third\"}},[_c('ul',{staticClass:\"ul_s\"},[_c('li',[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.first}},[_vm._v(\"什么是TEX?\")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.second}},[_vm._v(\"持有者权利\")])]),_vm._v(\" \"),_c('li',{staticClass:\"bgcolor\"},[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.third}},[_vm._v(\"获取TEX方法\")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.fourth}},[_vm._v(\"分红收益\")])])]),_vm._v(\" \"),_vm._m(3)]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-slide orange-slide\",attrs:{\"id\":\"fourth\"}},[_c('ul',{staticClass:\"ul_s\"},[_c('li',[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.first}},[_vm._v(\"什么是TEX?\")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.second}},[_vm._v(\"持有者权利\")])]),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.third}},[_vm._v(\"获取TEX方法\")])]),_vm._v(\" \"),_c('li',{staticClass:\"bgcolor\"},[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.fourth}},[_vm._v(\"分红收益\")])])]),_vm._v(\" \"),_c('div',[_c('h3',{staticClass:\"title\"},[_vm._v(\"TEX分红收益\")]),_vm._v(\" \"),_c('p',{staticClass:\"article\"},[_vm._v(\"TEX每日的分红收益是根据用户持有的锁仓24小时的TEX数量分配的。\\n                    每天的平台总收入会平均分配到每一个锁仓24小时TEX上，\\n                     并且以各种币的形式分红到您的账户里，锁仓24小时的TEX越多，分红越多。\")]),_vm._v(\" \"),_c('table',{staticClass:\"table tc\",staticStyle:{\"border-top\":\"none\",\"margin-top\":\"60px\"}},[_c('thead',[_c('tr',[_c('th',{staticClass:\"ths\",staticStyle:{\"text-align\":\"center\",\"width\":\"200px\"}},[_vm._v(_vm._s(_vm.$t(\"time\")))]),_vm._v(\" \"),_c('th',{staticClass:\"ths\"},[_vm._v(\"平台交易收入估值(BTC)\")]),_vm._v(\" \"),_c('th',{staticClass:\"ths\"},[_vm._v(\"参与分红TEX总量\")]),_vm._v(\" \"),_c('th',{staticClass:\"ths\"},[_vm._v(\"每百万TEX分红估值(BTC)\")])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.form),function(item){return _c('tr',[_c('td',{staticClass:\"tds\",staticStyle:{\"font-family\":\"Helvetica\",\"text-align\":\"center\"}},[_vm._v(_vm._s(_vm.dateTime(item.timestamp+'').slice(0,10)))]),_vm._v(\" \"),_c('td',{staticClass:\"tds\"},[_vm._v(_vm._s(Number(item.btcvalue).toFixed(8)))]),_vm._v(\" \"),_c('td',{staticClass:\"tds\",staticStyle:{\"font-family\":\"Helvetica\"}},[_vm._v(_vm._s(Math.floor(item.mining_count)))]),_vm._v(\" \"),_c('td',{staticClass:\"tds\",staticStyle:{\"font-family\":\"Helvetica\"}},[_vm._v(_vm._s((_vm.Divide((Number(item.btcvalue).toFixed(8)),Math.floor(item.mining_count))*1000000).toFixed(8)))])])}))])])])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticStyle:{\"width\":\"982px\",\"margin\":\"0 auto\",\"height\":\"251px\",\"margin-top\":\"150px\"}},[_c('li',{staticClass:\"imgs\"},[_c('img',{attrs:{\"src\":require(\"../../images/index/computer.png\"),\"width\":\"318px\",\"alt\":\"\"}})]),_vm._v(\" \"),_c('li',{staticClass:\"imgs line\"},[_vm._v(\"获得TEX\")]),_vm._v(\" \"),_c('li',{staticClass:\"imgs\"},[_c('img',{attrs:{\"src\":require(\"../../images/index/left_img.png\"),\"width\":\"300px\",\"alt\":\"\"}})])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"main_footer\"},[_c('li',{staticStyle:{\"float\":\"left\"}},[_vm._v(\"交易即挖矿\")]),_vm._v(\" \"),_c('li',{staticStyle:{\"text-align\":\"right\"}},[_vm._v(\"限恒定为 5,000,000,000 TEX\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h3',{staticClass:\"title\"},[_vm._v(\"持有者权利\")]),_vm._v(\" \"),_c('p',{staticClass:\"article\",staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"TEX是可流通的加密数字权益证明，作为3EX社区权益的代表，是3EX社区治理的基石。\")]),_vm._v(\" \"),_c('ul',[_c('li',{staticClass:\"yuan\",staticStyle:{\"margin-left\":\"162px\"}},[_vm._v(\"平台收入分红\")]),_vm._v(\" \"),_c('li',{staticClass:\"yuan\"},[_vm._v(\"参与决策\")]),_vm._v(\" \"),_c('li',{staticClass:\"yuan\"},[_vm._v(\"选举和监督\")])]),_vm._v(\" \"),_c('ul',{staticStyle:{\"width\":\"926px\",\"margin\":\"0 auto\"}},[_c('li',{staticClass:\"main\"},[_vm._v(\"3EX交易平台每日的收入，会100%平均分配给每个锁仓24小时的TEX。\\n                         拥有的TEX越多，分红就越多。\")]),_vm._v(\" \"),_c('li',{staticClass:\"main\",staticStyle:{\"margin-left\":\"103px\"}},[_vm._v(\"3EX社区通过发起智能合约投票，\\n                         让TEX持有者参与业务决策。业务决策范围包括手续费、交易品类等。\")]),_vm._v(\" \"),_c('li',{staticClass:\"main\",staticStyle:{\"margin-left\":\"103px\"}},[_vm._v(\"持有TEX的用户未来可以参与3EX社区的自治委员会的选举，\\n                         并且可以监督项目方的各种违规行为，用TEX投票把违规项目方下线。\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h3',{staticClass:\"title\"},[_vm._v(\"获取TEX方法是什么？\")]),_vm._v(\" \"),_c('ul',{staticStyle:{\"width\":\"1200px\",\"margin-top\":\"77px\"}},[_c('li',{staticClass:\"bg_img\"},[_c('h2',{staticClass:\"main_title\"},[_vm._v(\"挖矿获得\")]),_vm._v(\" \"),_c('p',{staticClass:\"p_1\"},[_vm._v(\"通过“交易即挖矿”的方式获取，\\n                            每日平台根据当日TEX的价格和平台交易手续费来计算出当日释放的TEX数量\\n                            ，再按照交易费贡献额等比例发放到您的资产账户中。\\n                            \")])]),_vm._v(\" \"),_c('li',{staticClass:\"bg_img\",staticStyle:{\"float\":\"right\"}},[_c('h2',{staticClass:\"main_title\"},[_vm._v(\"交易获得\")]),_vm._v(\" \"),_c('p',{staticClass:\"p_2\"},[_vm._v(\"用户可以通过币币交易的形式直接购买TEX。\")])])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2aed1994\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/Special/special.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true,\\\"minimize\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2aed1994\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./special.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./special.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./special.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2aed1994\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./special.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-2aed1994\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/Special/special.vue\n// module id = null\n// module chunks = ","/**\n * SSR Window 1.0.0\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: February 10, 2018\n */\nvar d;\nif (typeof document === 'undefined') {\n  d = {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: '',\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {},\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        },\n      };\n    },\n    location: { hash: '' },\n  };\n} else {\n  // eslint-disable-next-line\n  d = document;\n}\n\nvar doc = d;\n\nvar w;\nif (typeof window === 'undefined') {\n  w = {\n    document: doc,\n    navigator: {\n      userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        },\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n  };\n} else {\n  // eslint-disable-next-line\n  w = window;\n}\n\nvar win = w;\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Dom7 2.0.7\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: June 14, 2018\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function proxy(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, proxy, capture);\n  }\n  return dom.on(eventName, targetSelector, proxy, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n // eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n // eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * Swiper 4.3.3\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: June 5, 2018\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!(('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  }\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (swiper.isHorizontal()) {\n        slideSize = slide[0].getBoundingClientRect().width +\n          parseFloat(slideStyles.getPropertyValue('margin-left')) +\n          parseFloat(slideStyles.getPropertyValue('margin-right'));\n      } else {\n        slideSize = slide[0].getBoundingClientRect().height +\n          parseFloat(slideStyles.getPropertyValue('margin-top')) +\n          parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress =\n      (\n        (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n      ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible =\n                (slideBefore >= 0 && slideBefore < swiper.size) ||\n                (slideAfter > 0 && slideAfter <= swiper.size) ||\n                (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventIntercationOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index$$1 = swiper.activeIndex;\n  const snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index$$1 = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2)) ||\n        (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index$$1, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index$$1 <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  } else if (index$$1 >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index$$1; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi =\n      !device.webView &&\n      (ipod || iphone) &&\n      (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7) &&\n      metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventIntercationOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  if (\n    Device.ios &&\n    !Device.cordova &&\n    params.iOSEdgeSwipeDetection &&\n    ((startX <= params.iOSEdgeSwipeThreshold) ||\n    (startX >= window.screen.width - params.iOSEdgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement &&\n      $(document.activeElement).is(data$$1.formElements) &&\n      document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n    if (preventDefault && swiper.allowTouchMove) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate()) ||\n        (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate()) ||\n      (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    } else if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;\n    const needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakPointsParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakPointsParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if (Browser.isIE && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventIntercationOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  iOSEdgeSwipeDetection: false,\n  iOSEdgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object') return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object' &&\n          !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static get Class() {\n    return SwiperClass;\n  }\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      mutations.forEach((mutation) => {\n        swiper.emit('observerUpdate', mutation);\n      });\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: false });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1);\n      slidesBefore = slidesPerGroup;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => a < b).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      swiper.virtual.update();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth &&\n          point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported &&\n    document.implementation &&\n    document.implementation.hasFeature &&\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements &&\n        typeof params.nextEl === 'string' &&\n        $nextEl.length > 1 &&\n        swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements &&\n        typeof params.prevEl === 'string' &&\n        $prevEl.length > 1 &&\n        swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isEnd && !swiper.params.loop) return;\n        swiper.slideNext();\n      });\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isBeginning && !swiper.params.loop) return;\n        swiper.slidePrev();\n      });\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click');\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click');\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick &&\n        !$(e.target).is($prevEl) &&\n        !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML =\n        `<span class=\"${params.currentClass}\"></span>` +\n        ' / ' +\n        `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements &&\n      typeof params.el === 'string' &&\n      $el.length > 1 &&\n      swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el &&\n        swiper.params.pagination.hideOnClick &&\n        swiper.pagination.$el.length > 0 &&\n        !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListener ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListener ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListener ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListener ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      swiper.zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal() &&\n        (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x) ||\n          (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } else if (\n        !swiper.isHorizontal() &&\n        (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y) ||\n          (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop ?\n        new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid) :\n        new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      swiper.slideTo(swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index());\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ?\n        Math.max(1 - Math.abs($slideEl[0].progress), 0) :\n        1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2) +\n          (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/swiper/dist/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = ","module.exports = __webpack_public_path__ + \"static/img/computer.c6858a7.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/index/computer.png\n// module id = y793\n// module chunks = 0 8"],"sourceRoot":""}